/*
<뷰  : VIEW>
SELECT문을 저장해 둘 수 있는 객체
(자주쓰는 긴 SELECT문을 저장해두면 그 긴 SELECT 문을 매번 다시 기술할 필요없음)
임시테이블 같은 존재(실제 데이터가 담겨있는건 아님=>논리적이 테이블)
*/
--'한국'에서 근무하는 사원들의 사번, 사원명, 부서명.급여,근무국가명 조회
SELECT EMP_ID,EMP_NAM,DEPT_TITLE,SALARY,NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE=DEFP_ID)
JOIN LOCATION ON(LOCATIO_ID=LOCAL_CODE/0
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONA_NAME = '한국';

CREATE OR REPLACE VIEW VM_JOB;
AS SELECT JOB_CODE,JOB_NAME
          FROM JOB;
          
SELECT*FROM VM_JOB;
SELECT*FROM JOB;

--뷰를 통해 INSERT
INSERT INTO VM_JOB VALUES('J8','인턴');
          
--뷰를 통해 UPDATE
UPDATE VM_JOB
   SET JOB_NAME = '알바'
WHERE JOB_CODE = 'J8'

--뷰를 통해 DELETE
DELETE
  FROM VM_JOB
  WHERE JOB_CODE='J8'

/*
*단 DML명령어로 조작이 불가능한 경우가 더 많음
1)뷰에 정의되어있지않은 컬럼을 조작하려는 경우
2)뷰에 정의되어있지않은 컬럼 중에 베이스테이블 상에 NOT NULL제약조건이 지정되어있는 경우
3)산술연산식이나 함수식으로 정의되어 있는 경우
4)그룹함수나 GROUP BY 절이 포함되어 있는 경우
5)DISTINCT 구문이 포함된 경우
6)JOIN 을 이용하여 여러 테이블을 연결시켜놓은 경우
*/
--뷰 정의
CREATE OR REPLACE VIEW VM_JOB
AS SELECT JOP_CODE
   FROM JOB;
--뷰에 정의되어있지 않은 컬럼을 조작할 경우

--뷰를 통해INSERT
INSERT INTO VM_JOB(JOB_CODE,JOB_NAME) VALUES('J8','인턴');

--뷰를 통해 UPDATE
UPDATE VM_JOB
  SET JOB_NAME='알바'
WHERE JOB_CODE='J8'

--뷰를 통해DELETE
DELETE
  FROM VM_JOB
  WHERE JOB_NAME='사원'
  
-- 2)뷰에 정의되어있지 않은 컬럼중에 베이스테이블 상에 NOT NULL제약조건이 지정되어있는 경우
 --VIEW  생성
 CREATE PR REPLACE VIEW VM_JOB
 AS SELECT JOB_NAME
     FROM JOB;

--INSERT
INSERT INTO VM_JOB VALUES('사원');
--실제 테이블에 INSESRT할 때는 VALUES(NULL,'사원') 추가
--                JOB_CODE는 PK라서 NULL을 넣을 수 없음
--DELETE
DELETE
  FROM VM_JOB
WHERE JOB_NAME='사원';
--외래키가 되어있는경우 자식테이블에서 사용하고 있으면 삭제 안됨

ROLLBACK;


  
  
--)3 산술연산식이나 함수식으로 정의되어 있는 경우
CREATE OR REPLACE VIEW VM_EMP_SAL
AS SELECT EMP_ID,,EMP_NAME,SALARY,SALARY*12 연봉
   FROM EMPLOYEE;
   
--INSERT
INSERT INTO VM_EMP_SAL VALUES(600,'김상진',3000000,36000000);
INSERT INTO VM_EMP_SAL(EMP_ID,NAME,SALARY)
      VALUES(600,'김상진',3000000,36000000);
      
---UPDATE(오류)
UPDATE VM_EMP_SAL
   SET 연봉 = 40000000
WHERE EMP_ID = 301;

---UPDATE(오류)
UPDATE VM_EMP_SAL
   SET SALARY=40000000
WHERE EMP_ID = 301;

SELECT*FROM VM_EMP_SAL
ORDER BY 연봉;

DELETE
FROM VM_EMP_SAL
WHERE 연봉=16560000;

ROLLBACK;

--그룹함수나 GROUP BY절이 포함되어있는경우

CREATE OR REPLACE VIEW VM_GROUP_DEPT
AS SELECT DEPT_CODE,SUM(SALARY) 합계,CEIL(AVG(SALARY)) 평균
  FROM EMMPLOYEE
  GROUP BY DEPT_CODE;
  
SELECT*FROM VM_GROUP_DEPT;
SELECT*FROM EMPLOYEE;

--INSERT
INSERT INTO VM_GROUP_DEPT VALUES('D3',8000000,4000000);

--UPDATE(오류)
UPDATE VM_GROUP_DEPT
  SET 합계 = 6000000
  WHERE DEPT_CODE='D2';
  
--DELETE(오류)
DELETE FROM VM_GROUP_DEPT
WHERE 합계ㅐ = 17700000;

--5)DISTINCT 구문이 포함된 경우
CREATE OR REPLACE VIEW VM_EM_JOB
AS SELECT DISTINCT JOB_CODE
        FROM EMPLOYEE;
        
SELECT *FROM VM_JOB;

--INSERT(오류)
INSERT INTO VM_JOB VALUES('J8');

--UPDATE
UPDATE VM_JOB
  SET JOB_CODE='J8'
  WHERE JOB_CODE='J1';